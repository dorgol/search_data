/*
    Name: Felix - Renewed Subscription Offer (2023-04-26)
    Query ID: 41360
    Created By: Felix Ambrose
    Last Updated At: 2023-04-26T12:15:10.060Z
    */
    declare start_date timestamp default '2022-01-01';

with offer_presented as (

    select distinct
        date_trunc(date(meta_received_at), month) as event_timestamp_month,
        date_trunc(date(meta_received_at), week) as event_timestamp_week,
        date_trunc(date(meta_received_at), day) as event_timestamp_day,
        id_for_vendor,
        presentation_id
    from `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_subscription_offer_presented`
    where meta_received_at > start_date
    
),

purchase_initiated as (

    select distinct
        date_trunc(date(meta_received_at), month) as event_timestamp_month,
        date_trunc(date(meta_received_at), week) as event_timestamp_week,
        date_trunc(date(meta_received_at), day) as event_timestamp_day,
        id_for_vendor,
        subscription_presentation_id as presentation_id
    from `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_subscription_purchase_initiated`    
),

purchase_succeeded as (

    select distinct
        date_trunc(date(meta_received_at), month) as event_timestamp_month,
        date_trunc(date(meta_received_at), week) as event_timestamp_week,
        date_trunc(date(meta_received_at), day) as event_timestamp_day,
        id_for_vendor,
        original_transaction_id as transaction_id,
        actual_proceeds
    from `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_subscription_purchase_succeeded`    
    left join (select  subscription.original_transaction_id as transaction_id,
                    --transaction.transaction_id,
                    sum(payments.actual_proceeds) as actual_proceeds
                from `ltx-dwh-prod-processed`.`subscriptions`.`unified_transactions`
                group by 1) tran on original_transaction_id = tran.transaction_id
),

combined as (    
    
    select distinct
        offer_presented.*,
        purchase_initiated.id_for_vendor as init_id,
        purchase_succeeded.id_for_vendor as succ_id,
        purchase_succeeded.actual_proceeds
    from 
        offer_presented
    left join 
        purchase_initiated using(id_for_vendor, event_timestamp_day) -- Unable to also join on Presentation ID?
    left join 
        purchase_succeeded using(id_for_vendor, event_timestamp_day) -- Unable to also join on Presentation ID? Number dramatically reduces when join by date 
)


select 
    event_timestamp_month, -- add parameter!
    count(distinct id_for_vendor) as total_offers,
    count(distinct init_id) as count_init,
    count(distinct succ_id) as count_succ,
    (count(distinct init_id)/count(distinct id_for_vendor))*100 as payment_init_rate,
    (count(distinct succ_id)/count(distinct id_for_vendor))*100 as payment_succ_rate,
    sum(actual_proceeds) as rev --changing from original_transaction to transaction decreases rev figure substantially 
from combined
group by 1
order by 1 asc


