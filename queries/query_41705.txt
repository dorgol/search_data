/*
    Name: VL Data Glossary -  Export Retention
    Query ID: 41705
    Created By: Felix Ambrose
    Last Updated At: 2023-05-09T13:27:39.556Z
    */
    with users as (
    select distinct
        date_trunc(date(first_active_dt), {{Time granularity}}) as cohort_period,
        date_diff(current_date(), date(first_active_dt), {{Time granularity}}) as total_periods,
        attribution_user_id,
        -- case when f.last_platform_user_id = 'unknown' then f.platform_device_id else f.last_platform_user_id end as user_id,
    from `ltx-dwh-prod-processed`.`agg`.`app_attribution_user_date` f
    where date_trunc(date(first_active_dt), {{Time granularity}}) >= date_sub(current_date(), interval 1 year)
        and date_trunc(current_date(), {{Time granularity}}) != date_trunc(date(first_active_dt), {{Time granularity}})
        and app_name = 'videoleap'
        and case  
            when '{{countries}}' = 'Global' then true 
            when '{{countries}}' = 'Rest of the World' then current_store_country not in ('US','CN')
            else current_store_country = '{{countries}}' end
)

, user_per_period as (
    select distinct
        cohort_period,
        total_periods,
        periods,
        count(distinct attribution_user_id) over (partition by cohort_period) as total_users_for_period
    from users
    join unnest(generate_array(0,30)) as periods
    where periods <= total_periods
)

, exports as (
    select
        date_trunc(date(first_active_dt), {{Time granularity}}) as cohort_period,
        date_diff(dt, date(first_active_dt), {{Time granularity}}) as active_period,
        count(distinct u.attribution_user_id) as export_users,
    from users u
    left join `ltx-dwh-prod-processed`.`agg`.`app_attribution_user_date` f
        on u.attribution_user_id = f.attribution_user_id
        and f.cntd_exports > 0             -- Counting only days where user performed an export
    where date_trunc(date(first_active_dt), {{Time granularity}}) >= date_sub(current_date(), interval 1 year)
        and date_trunc(current_date(), {{Time granularity}}) != date_trunc(dt, {{Time granularity}})
        and f.app_name = 'videoleap'
    group by 1,2
    having count(distinct f.attribution_user_id) > 100
)


select distinct
    format_date('%y-%m-%d', user_per_period.cohort_period) as cohort_period,
    active_period,
    '{{Time granularity}} ' || cast (active_period as string) || ' export retention' as period_name,
    export_users,
    total_users_for_period,
    round(100*export_users/total_users_for_period,2) as retention
from user_per_period
join exports
    on user_per_period.periods = exports.active_period
    and user_per_period.cohort_period = exports.cohort_period
where active_period >= 0 and active_period < 4
order by 1,2