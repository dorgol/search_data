/*
    Name: VL iOS - Video Asset & Trial Comms Experiment - CVR over time
    Query ID: 41570
    Created By: Joseph Rouncefield
    Last Updated At: 2023-05-03T10:13:13.735Z
    */
    with devices as (
    select
        timestamp_diff(experiment_started_meta, first_day, day) as days_to_assignment,
        lt_defacto_id,
        experiment,
        experiment_started_device,
        experiment_started_meta,
        first_day,
        case when variant like '%Baseline' then 'Baseline'
                     when variant like '%Variant 1' then 'Variant1'
                     when variant like '%Variant 2' then 'Variant2'
                     when variant like '%Variant 3' then 'Variant3' end as variant,
        segmentation,
        display_type
        --count(distinct lt_defacto_id) as num_devices,
    from `ltx-dwh-prod-processed.ab_test.raw_final_devices_and_variant` dav
    where lower(experiment) like lower('asset & trial comm (production)')
        --and variant = 'EVDSMBFeedCategoryExperimentBaseline'
        and case 
                when '{{segments}}' = 'All Users' then segmentation = '01 All Users' 
                when '{{segments}}' = 'New Users' then segmentation = '02 New Users' 
                when '{{segments}}' = 'Existing Users' then segmentation = '03 Existing Users' 
                when '{{segments}}' = 'No Segmentation' then segmentation = '01 All Users'
                else true end
        and case 
                when '{{display}}' = 'Activated' then display_type = 'activated_for_device'
                when '{{display}}' = 'Displayed' then display_type = 'displayed_vl_smb_feed_category_phase2_12_2022' -- change this when we know the name
                else true end
),
   
device_sub as (
select distinct
    std.lt_defacto_id,
    `lt_subscription_id`
from devices d
join ltx-dwh-prod-processed.subscriptions.subscription_to_defacto std
    on d.lt_defacto_id = std.lt_defacto_id
    and original_purchase_date >= experiment_started_meta
),

subsday0 as (
    select distinct
        d.days_to_assignment,
        s.lt_subscription_id,
        d.lt_defacto_id,
        d.variant,
        s.payments.revenue_so_far,
        s.subscription.had_trial,
        s.subscription.subscription_duration,
        s.original_purchase_date,
        s.subscription.is_sol
    from devices d 
    left join device_sub ds
        on ds.lt_defacto_id = d.lt_defacto_id
    left join `ltx-dwh-prod-processed`.`subscriptions`.`unified_subscriptions` s
        on ds.lt_subscription_id = s.lt_subscription_id
        and s.license_applications = 'videoleap'
    where  days_to_assignment >= {{start_day}} 
    and (select max(days_to_assignment) from devices)-days_to_assignment >= {{days to remove}}
),


array_days as (
select day_of_experiment
    from(select generate_array(0,50) as days_array),unnest(days_array) as day_of_experiment
)

select
    day_of_experiment,
    variant,
    count(distinct lt_defacto_id) as num_devices,
    count(distinct lt_subscription_id) as num_sub,
    count(distinct case when revenue_so_far > 0 then lt_subscription_id end) as num_eventually_paid_sub,
    count(distinct lt_subscription_id) / count(distinct lt_defacto_id) *100 as cum_cvr,
    count(distinct case when is_sol is true then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_sol_cvr,
    count(distinct case when revenue_so_far > 0 then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_paid_cvr,
    count(distinct case when revenue_so_far > 0 and is_sol is true then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_paid_sol_cvr,
    case when count(distinct case when subscription_duration = '1y' and had_trial then lt_subscription_id end) > 0 then count(distinct case when subscription_duration = '1y' and had_trial and revenue_so_far > 0 then lt_subscription_id end) / count(distinct case when subscription_duration = '1y' and had_trial then lt_subscription_id end) *100 else 0 end as cum_trial_to_paid_ratio
from subsday0
cross join array_days
where days_to_assignment <= day_of_experiment
and day_of_experiment >= {{start_day}} and day_of_experiment < (select max(days_to_assignment) from devices) - {{days to remove}}
group by 1,2
order by 1,2