/*
    Name: PL AI Selfies Generations
    Query ID: 42021
    Created By: Mitesh Hirani
    Last Updated At: 2023-05-18T14:57:38.667Z
    */
    
with base as
(select distinct dt,
platform_device_id
from
`ltx-dwh-prod-processed`.`agg`.`app_device_date`
where
dt >= "2023-05-16"
    and dt < date_trunc(current_date, {{Time granularity}})
    and app_name = "editor"
    and platform = "ios"
    --and d.current_store_country <> "China"
    and case when '{{Day}}' = "day0" then dt = first_active_dt
    when '{{Day}}' = "week0" then date_diff(dt, first_active_dt, day) <= 7
        when '{{Day}}' = "non day0" then dt > first_active_dt
        else true end
)

,

bp as
(select distinct
date(bp.meta_received_at) as dt,
platform_device_id,
screen_name,
button_identifier
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_button_pressed` as bp
 where
     bp.app_name='editor'
    and bp.screen_name in (
    --'ai_scenes_preview_page','ai_scenes_photo_selection','ai_scenes_main',
    'ai_selfies_preview_page','ai_selfies')
    and bp.button_identifier in ('continue','start','save')
    and date(bp.meta_received_at)>="2023-05-09"
),



fs as
(select distinct
date(efs.meta_received_at) as dt,
platform_device_id,
feature_name,
feature_usage_id as feature_starts
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_feature_started` as efs
 where
     efs.app_name='editor'
    and efs.feature_name in ('ai_selfie'
    --,
    --'ai_scenes'
    )
   and efs.meta_received_at>="2023-05-09"
   and case when '{{ subscribed }}' = 'Subscribed' then is_subscriber= true
        when '{{ subscribed }}' ='Non Subscribed' then is_subscriber= false
        else true end 
   --group by 1,2,3
),


  
  sub_f as
  (select distinct
  --sub_feature_name
  date(subf.meta_received_at) as dt,
  platform_device_id,
  feature_usage_id,
  sub_feature_usage_id,
  
  from
  `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_feature_sub_feature_started` as subf
    where subf.root_feature_name='ai_selfie'
    and subf.app_name='editor'
    and date(subf.meta_received_at)>="2023-05-09"
    and sub_feature_name not in ('edit_screen','results','selection.custom')
    and case when '{{ subscribed }}' = 'Subscribed' then is_subscriber= true
        when '{{ subscribed }}' ='Non Subscribed' then is_subscriber= false
        else true end 
    )




select *,

safe_divide(generates,ai_selfies_starters) as generates_per_user,
safe_divide(generates,generators) as generates_per_generator,
safe_divide(generates,ai_selfies_starts) as generates_per_feature_start

from
(
--exported_users as (
  select distinct
    date(date_trunc(d.dt, {{Time granularity}} )) as time,
    count( distinct d.platform_device_id) as users,
    count(distinct case when efs.feature_name='ai_selfie' then efs.platform_device_id end) as ai_selfies_starters,
    --count(distinct case when efs.feature_name='ai_scenes' then efs.platform_device_id end) as ai_scenes_starters,
    count( distinct case when efs.feature_name='ai_selfie' then efs.feature_starts end) as ai_selfies_starts,
    count(distinct sub_f.sub_feature_usage_id) as generates,
    count(distinct sub_f.platform_device_id) as generators,
    count(distinct sub_f.feature_usage_id) as feature_starts_with_generation
   -- sum( case when efs.feature_name='ai_scenes' then efs.feature_starts end) as ai_scenes_starts,
    --count(distinct case when bp.screen_name='ai_scenes_preview_page' and bp.button_identifier='continue' then bp.platform_device_id end) as ai_scenes_photo_selection_screen,
    --count(distinct case when bp.screen_name='ai_scenes_photo_selection' and bp.button_identifier='start' then bp.platform_device_id end) as ai_scenes_import_screen,
    --count(distinct case when bp.screen_name='ai_scenes_main' and bp.button_identifier='save' then bp.platform_device_id end) as ai_scenes_save_button,
    
  from base as d
  left join fs as efs
    on d.platform_device_id = efs.platform_device_id
    and d.dt = efs.dt
    --and efs.app_name='editor'
    --and efs.feature_name in ('ai_cars', 'ai_scenes')
   --and efs.meta_received_at>="2023-03-05"
   left join sub_f
   on d.platform_device_id = sub_f.platform_device_id
    and d.dt = sub_f.dt
   
  
   /*left join 
   `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_started` as im_s
   on d.platform_device_id = im_s.platform_device_id
    and d.dt = date(im_s.meta_received_at)
    and im_s.app_name='editor'
    and im_s.source in ('ai_scenes','ai_cars')
    and im_s.meta_received_at>="2023-03-05"
    left join `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_ended` as im_e
   on im_e.platform_device_id = im_s.platform_device_id
   and im_e.process_id=im_s.process_id
    and im_e.app_name='editor'
    and im_e.reason='success'
    and im_e.meta_received_at>="2023-03-05"
    */

  
  group by 1
--)
)