/*
    Name: VL iOS - Core Features Single Use
    Query ID: 41200
    Created By: Joseph Rouncefield
    Last Updated At: 2023-04-21T08:46:53.041Z
    */
    with devices as (
select distinct
    dd.platform_device_id as id_for_vendor,
    date(dd.first_active_dt) as first_active_dt,
    date(dt) as dt,
    sa.open_project_id
from `ltx-dwh-prod-processed`.`agg`.`app_device_date` dd
join `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_media_exported` sa
    on dd.platform_device_id = sa.id_for_vendor
    and case when '{{day}}' = 'day0' then date(sa.meta_received_at) = date(dd.first_active_dt)
                 when '{{day}}' = 'non day0' then date(sa.meta_received_at) > date(dd.first_active_dt)
                 when '{{day}}' = 'all' then date(sa.meta_received_at) >= date(dd.first_active_dt) end
join `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_media_export_started` e
    on e.export_id = sa.export_id
    and e.parent_template_id is null
where date_diff(date(current_date()), date(dd.dt), day) <= {{last x days}}
)

,export_features as 
(
    select distinct
        'Transition' as object_class_name,
        d.id_for_vendor,
        j.open_project_id
    from devices d
    join 
        (select 
            open_project_id, id_for_vendor,
            JSON_EXTRACT_SCALAR(summary, "$.object_identifier") AS object_identifier,
            JSON_EXTRACT_SCALAR(summary, "$.property_type") AS property_type,
            --JSON_EXTRACT_SCALAR(summary, "$.property_value") AS property_value
            
        from `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_session_summary_json` j
        , UNNEST(JSON_EXTRACT_ARRAY(summary_json)) AS summary
        ) j
        on d.open_project_id = j.open_project_id
        and d.id_for_vendor=j.id_for_vendor
        and property_type =  'Transition'

    
union all

    select distinct
        case when object_type in ('LensFlarePreset',
         'Defocus',
         'Prism',
         'Kaleidoscope',
         'ColorSplash',
         'Vignette',
         'EVDFilmGrainInputModel',
         'FishEye',
         'EVDOffsetInputModel',
         'EVDShakeInputModel',
         'EVDCrystalInputModel',
         'EVDRaysInputModel',
         'EVDStrobeInputModel'
         ) then 'Effects' 
         
         when object_type like '%Filters%' then 'Filter'
            when object_type like '%Adjust%' then 'Adjust'
         else object_type end as object_class_name,
         
        d.id_for_vendor,
        j.open_project_id
    from devices d
    join 
        (select 
            open_project_id, id_for_vendor,
            JSON_EXTRACT_SCALAR(summary, "$.object_identifier") AS object_identifier,
            JSON_EXTRACT_SCALAR(summary, "$.object_type") AS object_type,
            --JSON_EXTRACT_SCALAR(summary, "$.property_value") AS property_value
            
        from `ltx-dwh-prod-raw`.`analytics`.`ios_videoleap_session_outline_json` j
        , UNNEST(JSON_EXTRACT_ARRAY(outline_json)) AS summary
        ) j
        on d.open_project_id = j.open_project_id
        and d.id_for_vendor=j.id_for_vendor
        and object_type in ( 'EVDFiltersLayerInputModel','Text','EVDAdjustInputModel',
        'Sticker','Sound Effect','Voiceover','SelectiveAdjust','LensFlarePreset','Defocus','Prism','Kaleidoscope','ColorSplash','Vignette',
         'EVDFilmGrainInputModel','FishEye','EVDOffsetInputModel','EVDShakeInputModel','EVDCrystalInputModel','EVDRaysInputModel')

)

, single_feature_projects as (
    
    select 
    d.id_for_vendor,
    d.open_project_id,
    count(distinct object_class_name) as features
from devices d
inner join export_features ef
    using (id_for_vendor, open_project_id)
group by 1,2
)

, features as (
    select
       case when sf.features = 1 then 'single feature'
            when sf.features >1 then 'feature combo' end as type,
       case when sf.features = 1 and object_class_name = 'SelectiveAdjust' then 'Tone Lab'
            when sf.features = 1 then object_class_name 
            when sf.features > 1 then 'feature combo' else 'error' end as feature,
       count(distinct sf.open_project_id) as projects,
    from single_feature_projects sf
    inner join export_features ef
    using (id_for_vendor, open_project_id)
    group by 1,2
       )

select * from features
order by projects desc

