/*
    Name: [FT-1067] Beauty Feed - retention rate by feed usage on feed day0  - per entry point - with editor
    Query ID: 40950
    Created By: Shiri Zangvil Hassidov
    Last Updated At: 2023-04-10T10:49:53.008Z
    */
    with users as
(
    select distinct 
        d.experiment,
        d.first_day, 
        d.variant,
        d.segmentation,
        d.id_for_vendor,
        d.experiment_started_meta,
        d.experiment_started_meta_by_type,
        d.display_type,
    from `ltx-dwh-prod-processed`.`ab_test`.`raw_final_devices_and_variant` d
    where 
    true
    and d.application = '{{app_name}}'
    and lower(d.experiment) like lower('%{{experiment}}%')
    and d.display_type = 'reached home screen'
    and date(d.experiment_started_meta) >= '2023-02-19'
    and case 
        when '{{segments}}' = 'All Users' then d.segmentation = '01 All Users' 
        when '{{segments}}' = 'New Users' then d.segmentation = '02 New Users' 
        when '{{segments}}' = 'Existing Users' then d.segmentation = '03 Existing Users' 
        else true end
),

-- posts as (
--     select distinct
--         post_id,
--         title,
--         row_number() over (partition by post_id order by server_timestamp desc) as row_num
--     from `ltx-dwh-prod-raw`.`analytics`.`backend_feed_post_create`
--     where true
--     and app_name = 'facetune'
--     and account_id is not null
--     and requirements[offset(0)] like 'beauty%'
--     qualify row_number() over (partition by post_id order by server_timestamp desc) = 1
-- ),


last_items_info_per_feed_id as (
   select date(meta_received_at) as dt,
          *
   from (
         select
              *,
              row_number () over (partition by feed_id order by device_timestamp desc) as row
          from  `ltx-dwh-prod-raw.analytics_global.ltx_global_feed_usage_info`
          where true
          and items_info <> '[]'
          and items_info is not null
          and app_name = 'facetune2'
          and date(meta_received_at) >= '2023-02-19'
          and cast(app_version_code as int64) >= {{since_version}}
          and date(meta_received_at) >= date_sub(current_date(), interval 1 month)
)
where row = 1
),


usage as (    
select distinct
    f1.feed_type,
    fe.entry_point,
    f1.platform_device_id,
    f1.post_id,
    f1.session_id,
    f1.run_id,
    f1.feed_id,
    f2.actions,
    f2.action_id
from 
    (
    select
        app_name,
        platform,
        dt,
        platform_device_id,
        feed_id,
        meta_received_at, 
        app_version_code,
        `is_subscriber`,
        event_id,
        run_id,
        session_id,
        feed_description,
        feed_type,
        json_extract_scalar(items_info,"$.identifier.section.identifier") as post_id,
        cast (json_extract_scalar(items_info,"$.sectionPositionInFeed") as int) as position,
        cast (json_extract_scalar(items_info,"$.totalVisibleTime") as float64) totalVisibleTime,
    from last_items_info_per_feed_id as fui,
    unnest(json_extract_array(items_info)) as items_info
    ) f1
left join `ltx-dwh-playground.bi.20230410_facetune2_feed_entry_point_matching` fe
    on f1.feed_id = fe.feed_screen_id
    and f1.platform_device_id = fe.id_for_vendor
left join 
    (
    select
        platform_device_id,
        feed_id,
        meta_received_at,
        json_extract_scalar(items_info,"$.identifier.section.identifier") as post_id,
        json_extract_scalar(selections,"$.actionType") as actions,
        json_extract_scalar(selections,"$.actionIdentifier") action_id,
        cast(json_extract_scalar(selections,"$.actionTime") as float64) action_time,
    from last_items_info_per_feed_id as fui,
    unnest(json_extract_array(items_info)) as items_info,
    unnest(json_extract_array(items_info, "$.actions")) as selections

    ) f2
    on f1.feed_id = f2.feed_id
    and f1.platform_device_id = f2. platform_device_id
    and f1.post_id = f2.post_id
where true
and feed_type like '%beauty%'
),

usage_with_exports as (   
    select
        u.feed_type,
        u.entry_point,
        u.platform_device_id,
        u.post_id,
        u.session_id,
        u.run_id,
        u.feed_id,
        u.actions,
        u.action_id,
        count(distinct case when w.export_source like 'beauty%' then w.event_id end) as num_exports_from_feed,
        count(distinct case when w.export_source like 'beauty_quickstart%' then w.event_id end) as num_exports_from_beauty_qs,
        -- count(distinct case when w.export_source like 'beauty_quickstart%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.backdrop') = 'false' then w.event_id end) as num_exports_from_beauty_qs_backdropOFF,
        -- count(distinct case when w.export_source like 'beauty_quickstart%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.filter') = 'false' then w.event_id end) as num_exports_from_beauty_qs_filterOFF,
        -- count(distinct case when w.export_source like 'beauty_quickstart%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.makeup') = 'false' then w.event_id end) as num_exports_from_beauty_qs_makeupOFF,
        -- count(distinct case when w.export_source like 'beauty_quickstart%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.overlay') = 'false' then w.event_id end) as num_exports_from_beauty_qs_overlayOFF,
        count(distinct case when w.export_source like 'beauty_feed_in_home_tab%' then w.event_id end) as num_exports_from_beauty_feed_in_home_tab,
        -- count(distinct case when w.export_source like 'beauty_feed_in_home_tab%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.backdrop') = 'false' then w.event_id end) as num_exports_from_beauty_feed_in_home_tab_backdropOFF,
        -- count(distinct case when w.export_source like 'beauty_feed_in_home_tab%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.filter') = 'false' then w.event_id end) as num_exports_from_beauty_feed_in_home_tab_filterOFF,
        -- count(distinct case when w.export_source like 'beauty_feed_in_home_tab%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.makeup') = 'false' then w.event_id end) as num_exports_from_beauty_feed_in_home_tab_makeupOFF,
        -- count(distinct case when w.export_source like 'beauty_feed_in_home_tab%' and json_extract_scalar(split(preset_name,'_')[safe_offset(1)],'$.overlay') = 'false' then w.event_id end) as num_exports_from_beauty_feed_in_home_tab_overlayOFF,
        count(distinct case when f.reason = 'edit' then f.event_id end) as num_continue_to_edit,
        -- count(distinct case when f.reason = 'edit' and contains_substr(sub_feature_state, '"backdrop":"false"') then f.event_id end) as num_continue_to_edit_backdropOFF,
        -- count(distinct case when f.reason = 'edit' and contains_substr(sub_feature_state, '"filter":"false"') then f.event_id end) as num_continue_to_edit_filterOFF,
        -- count(distinct case when f.reason = 'edit' and contains_substr(sub_feature_state, '"makeup":"false"') then f.event_id end) as num_continue_to_edit_makeupOFF,
        -- count(distinct case when f.reason = 'edit' and contains_substr(sub_feature_state, '"overlay":"false"') then f.event_id end) as num_continue_to_edit_overlayOFF,
        count(distinct case when f.reason = 'accepted' then f.event_id end) as num_accepted_in_editor,
        -- count(distinct case when f.reason = 'accepted' and contains_substr(sub_feature_state, '"backdrop":"false"') then f.event_id end) as num_accepted_in_editor_backdropOFF,
        -- count(distinct case when f.reason = 'accepted' and contains_substr(sub_feature_state, '"filter":"false"') then f.event_id end) as num_accepted_in_editor_filterOFF,
        -- count(distinct case when f.reason = 'accepted' and contains_substr(sub_feature_state, '"makeup":"false"') then f.event_id end) as num_accepted_in_editor_makeupOFF,
        -- count(distinct case when f.reason = 'accepted' and contains_substr(sub_feature_state, '"overlay":"false"') then f.event_id end) as num_accepted_in_editor_overlayOFF,
    from usage u
    left join `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_export_started` w
        on w.app_name = '{{app_name}}'
        and w.platform_device_id = u.platform_device_id
        and w.meta_received_at >= '2023-02-19'
        and date(w.meta_received_at) >= date_sub(current_date(), interval 1 month)
        and (w.export_source like 'beauty_feed_in_home_tab%' or w.export_source like 'beauty_quickstart%')
        and ends_with(w.export_source, u.action_id)
    left join `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_feature_ended` f
        on f.app_name = '{{app_name}}'
        and f.platform_device_id = u.platform_device_id
        and f.meta_received_at >= '2023-02-19'
        and date(f.meta_received_at) >= date_sub(current_date(), interval 1 month)
        and f.feature_name = 'BeautyPresets'
        and f.reason in ('edit', 'accepted')
        -- and case when f.reason = 'edit' then split(json_extract_scalar(f.sub_feature_state, '$.miscState'),'.')[safe_offset(1)] = u.action_id
        --     when f.reason = 'accepted' then left(split(sub_feature_state, '"actionID":"')[safe_offset(1)],36) = u.action_id
        --     end
        and case when f.reason = 'edit' then ends_with(f.feature_usage_id, u.action_id)
            when f.reason = 'accepted' then left(split(sub_feature_state, '"actionID":"')[safe_offset(1)],36) = u.action_id
            end
    group by 1,2,3,4,5,6,7,8,9
),

feed_usage_summary as (
select 
    experiment,
    variant,
    segments,
    entry_point,
    platform_device_id,
    experiment_started_meta,
    case when user_imps > 2 then true else false end as is_scroller,
    case when user_try_preset_clicks > 0 then true else false end tried_preset,
    case when user_num_exports_from_feed > 0 then true else false end as exported_from_feed,
    case when user_num_continue_to_edit > 0 then true else false end as continued_to_edit,
    case when user_num_accepted_in_editor > 0 then true else false end as accepted_in_editor,
    --title,
from (
    select distinct
        experiment,
        variant,
        '{{segments}}' as segments,
        entry_point,
        platform_device_id,
        experiment_started_meta,
        --case when title is not null then title else u.post_id end as title,
        sum(num_exports_from_feed) over (partition by platform_device_id, entry_point) as user_num_exports_from_feed,
        sum(num_continue_to_edit) over (partition by platform_device_id, entry_point) as user_num_continue_to_edit,
        sum(num_accepted_in_editor) over (partition by platform_device_id, entry_point) as user_num_accepted_in_editor,
        count(distinct case when u.actions is null then concat(u.platform_device_id,'-',u.post_id,'-',u.session_id,'-',u.feed_id) end) over (partition by platform_device_id, entry_point) as user_imps,
        count(distinct case when u.actions = 'use_template' then u.action_id end) over (partition by platform_device_id, entry_point) as user_try_preset_clicks,
    from users us
    join usage_with_exports u
        on u.platform_device_id = us.id_for_vendor
    -- left join posts p
    --     on p.post_id = u.post_id
    )
),

retention as (
    select
        u.experiment,
        u.variant,
        u.segments,
        u.entry_point,
        u.platform_device_id,
        case when exported_from_feed or accepted_in_editor then '5 day0_save_accept'
            when continued_to_edit then '4 day0_edit'
            when tried_preset then '3 day0_try_preset'
            when is_scroller then '2 day0_scroll'
            else '1 day0_bounce' end as feed_user_type,
        --u.title,
        coalesce(date_diff(current_date(), date(u.experiment_started_meta), day) > 7, false) as week_0_user,
        coalesce(date_diff(current_date(), date(u.experiment_started_meta), day) > 14, false) as week_1_user,
        coalesce(date_diff(current_date(), date(u.experiment_started_meta), day) > 21, false) as week_2_user,
        coalesce(date_diff(current_date(), date(u.experiment_started_meta), day) > 28, false) as week_3_user,
        max(date_diff(dt, date(experiment_started_meta), day) between 1 and 7) as retained_week_0,
        max(date_diff(dt, date(experiment_started_meta), day) between 8 and 14) as retained_week_1,
        max(date_diff(dt, date(experiment_started_meta), day) between 15 and 21) as retained_week_2,
        max(date_diff(dt, date(experiment_started_meta), day) between 22 and 28) as retained_week_3,
    from feed_usage_summary u 
    left join `ltx-dwh-prod-processed`.`agg`.`app_device_date` d
        on u.platform_device_id = d.platform_device_id
        and d.dt >= date(experiment_started_meta)
        and d.dt >= '2023-02-19'
        and d.app_name = 'facetune2'
    where true
    group by 1,2,3,4,5,6,7,8,9,10
)

select
    experiment,
    --variant,
    segments,
    entry_point,
    --title,
    feed_user_type,
    count(distinct case when week_0_user then platform_device_id end) as users_week_0,
    count(distinct case when week_1_user then platform_device_id end) as users_week_1,
    count(distinct case when week_2_user then platform_device_id end) as users_week_2,
    count(distinct case when week_3_user then platform_device_id end) as users_week_3,
    count(distinct case when retained_week_0 and week_0_user then platform_device_id end) as retained_week_0,
    count(distinct case when retained_week_1 and week_1_user then platform_device_id end) as retained_week_1,
    count(distinct case when retained_week_2 and week_2_user then platform_device_id end) as retained_week_2,
    count(distinct case when retained_week_3 and week_3_user then platform_device_id end) as retained_week_3,
    100*count(distinct case when retained_week_0 and week_0_user then platform_device_id end)/nullif(count(distinct case when week_0_user then platform_device_id end),0) as pct_retained_week_0,
    100*count(distinct case when retained_week_1 and week_1_user then platform_device_id end)/nullif(count(distinct case when week_1_user then platform_device_id end),0) as pct_retained_week_1,
    100*count(distinct case when retained_week_2 and week_2_user then platform_device_id end)/nullif(count(distinct case when week_2_user then platform_device_id end),0) as pct_retained_week_2,
    100*count(distinct case when retained_week_3 and week_3_user then platform_device_id end)/nullif(count(distinct case when week_3_user then platform_device_id end),0) as pct_retained_week_3,
from retention
where true
group by 1,2,3,4
order by 1,2,3,4