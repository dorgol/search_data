/*
    Name: PL AI Scenes Funnel
    Query ID: 40164
    Created By: Mitesh Hirani
    Last Updated At: 2023-05-09T09:45:58.906Z
    */
    
with base as
(select distinct dt,
platform_device_id
from
`ltx-dwh-prod-processed`.`agg`.`app_device_date`
where
dt >= "2023-03-05"
    and dt < date_trunc(current_date, {{Time granularity}})
    and app_name = "editor"
    and platform = "ios"
    --and d.current_store_country <> "China"
    and case when '{{Day}}' = "day0" then dt = first_active_dt
    when '{{Day}}' = "week0" then date_diff(dt, first_active_dt, day) <= 7
        when '{{Day}}' = "non day0" then dt > first_active_dt
        else true end
)

,

bp as
(select distinct
date(bp.meta_received_at) as dt,
platform_device_id,
screen_name,
button_identifier
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_button_pressed` as bp
 where
     bp.app_name='editor'
    and bp.screen_name in ('ai_scenes_preview_page','ai_scenes_photo_selection','ai_scenes_export_screen','ai_scenes_main','ai_cars_preview_page','ai_scenes')
    and bp.button_identifier in ('continue','start','save', 'before_after_video')
    and date(bp.meta_received_at)>="2023-03-05"
),

im as
(select distinct
date(im_e.meta_received_at) as dt,
im_e.platform_device_id
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_started` as im_s

    --and d.dt = date(im_s.meta_received_at)
    inner join `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_ended` as im_e
   on im_e.platform_device_id = im_s.platform_device_id
   and im_e.process_id=im_s.process_id
    and im_e.app_name='editor'
    and im_e.reason='success'
    and im_e.meta_received_at>="2023-03-05"
where im_s.app_name='editor'
    and im_s.source in ('ai_scenes'
    --,'ai_cars'
    )
    and im_s.meta_received_at>="2023-03-05"
),

fs as
(select 
date(efs.meta_received_at) as dt,
platform_device_id,
feature_name,
count(distinct feature_usage_id) as feature_starts
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_feature_started` as efs
 where
     efs.app_name='editor'
    and efs.feature_name in ('ai_cars', 'ai_scenes')
   and efs.meta_received_at>="2023-03-05"
   group by 1,2,3
),

exps as
(
select
date(ex_s.meta_received_at) as dt,
platform_device_id,
export_source,
count(distinct process_id) as exports
from
`ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_export_started` as ex_s
   where
     ex_s.app_name='editor'
    and ex_s.export_source in ('ai_scenes','ai_cars','ai_scenes.video')
    and ex_s.meta_received_at>="2023-03-05"
    group by 1,2,3
  ),
  
  sub_f as
  (select distinct
  date(subf.meta_received_at) as dt,
  platform_device_id
  from
  `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_feature_sub_feature_started` as subf
    where subf.root_feature_name='ai_scenes'
    and subf.app_name='editor'
    and date(subf.meta_received_at)>="2023-03-05")



select *,
safe_divide(ai_scenes_starters ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as started_ai_scenes,
safe_divide(ai_scenes_photo_selection_screen ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as photo_selection,
safe_divide(ai_scenes_import_screen ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as import_screen,
safe_divide(ai_scenes_imported_image ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as imported_image,
safe_divide(ai_scenes_applied_filter ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as applied_filter,
safe_divide(ai_scenes_video_button ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as video_button,
safe_divide(ai_scenes_save_button ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as save_button,
safe_divide(ai_scenes_exported ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as exported,
safe_divide(ai_scenes_video_exported ,case when '{{ % of }}'='All Users' then users when '{{ % of }}'='Users Starting Feature' then ai_scenes_starters end)*100 as video_exported,
safe_divide(ai_scenes_starts,ai_scenes_starters) as feature_starts_per_user,
safe_divide(ai_scenes_exports,ai_scenes_starters) as exports_per_user

from
(
--exported_users as (
  select distinct
    date(date_trunc(d.dt, {{Time granularity}} )) as time,
    count( distinct d.platform_device_id) as users,
    count(distinct case when efs.feature_name='ai_cars' then efs.platform_device_id end) as ai_cars_starters,
    count(distinct case when efs.feature_name='ai_scenes' then efs.platform_device_id end) as ai_scenes_starters,
    sum( case when efs.feature_name='ai_cars' then efs.feature_starts end) as ai_cars_starts,
    sum( case when efs.feature_name='ai_scenes' then efs.feature_starts end) as ai_scenes_starts,
    count(distinct case when bp.screen_name='ai_scenes_preview_page' and bp.button_identifier='continue' then bp.platform_device_id end) as ai_scenes_photo_selection_screen,
    count(distinct case when bp.screen_name='ai_scenes_photo_selection' and bp.button_identifier='start' then bp.platform_device_id end) as ai_scenes_import_screen,
    count(distinct case when bp.screen_name in ('ai_scenes_main','ai_scenes') and bp.button_identifier='save' then bp.platform_device_id end) as ai_scenes_save_button,
    count(distinct case when bp.screen_name='ai_scenes_export_screen' and bp.button_identifier='before_after_video' then bp.platform_device_id end) as ai_scenes_video_button,
    count(distinct case when bp.screen_name='ai_cars_preview_page' and bp.button_identifier='start' then bp.platform_device_id end) as ai_cars_import_screen,
    count(distinct im.platform_device_id ) as ai_scenes_imported_image,
    --count(distinct case when im_s.source='ai_cars' and im_e.reason='success' then im_e.platform_device_id end) as ai_cars_imported_image,
    count(distinct sub_f.platform_device_id) as ai_scenes_applied_filter,
    count(distinct case when ex_s.export_source='ai_cars' then ex_s.platform_device_id end) as ai_cars_exported,
    count(distinct case when ex_s.export_source='ai_scenes' then ex_s.platform_device_id end) as ai_scenes_exported,
    count(distinct case when ex_s.export_source='ai_scenes.video' then ex_s.platform_device_id end) as ai_scenes_video_exported,
    sum( case when ex_s.export_source='ai_scenes' then ex_s.exports end) as ai_scenes_exports
  from base as d
  left join fs as efs
    on d.platform_device_id = efs.platform_device_id
    and d.dt = efs.dt
    --and efs.app_name='editor'
    --and efs.feature_name in ('ai_cars', 'ai_scenes')
   --and efs.meta_received_at>="2023-03-05"
   left join sub_f
   on d.platform_device_id = sub_f.platform_device_id
    and d.dt = sub_f.dt
   
   left join bp
    on d.platform_device_id = bp.platform_device_id
    and d.dt = bp.dt
   
   left join im
   on d.platform_device_id = im.platform_device_id
    and d.dt = im.dt
   left join exps as ex_s
   on d.platform_device_id = ex_s.platform_device_id
    and d.dt = ex_s.dt
   /*left join 
   `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_started` as im_s
   on d.platform_device_id = im_s.platform_device_id
    and d.dt = date(im_s.meta_received_at)
    and im_s.app_name='editor'
    and im_s.source in ('ai_scenes','ai_cars')
    and im_s.meta_received_at>="2023-03-05"
    left join `ltx-dwh-prod-raw`.`analytics_global`.`ltx_global_import_ended` as im_e
   on im_e.platform_device_id = im_s.platform_device_id
   and im_e.process_id=im_s.process_id
    and im_e.app_name='editor'
    and im_e.reason='success'
    and im_e.meta_received_at>="2023-03-05"
    */

  
  group by 1
--)
)