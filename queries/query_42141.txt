/*
    Name: Monthly Only - [FT2-1051] Monthly Only With Trial Communication vs new baseline - Products Validation w/ Transactions Table
    Query ID: 42141
    Created By: Josh Seidman
    Last Updated At: 2023-05-23T07:56:37.125Z
    */
    with
users as
(
        select
            segmentation,
            variant,
            display_type,
            id_for_vendor,
            experiment_started_meta,
            experiment_started_meta_by_type,
            lt_defacto_id,
            count(distinct id_for_vendor) over (partition by segmentation, variant) total_users 
        from `ltx-dwh-prod-processed`.`ab_test`.`raw_final_devices_and_variant` d
        where case 
            when '{{segments}}' = 'All Users' then segmentation = '01 All Users' 
            when '{{segments}}' = 'New Users' then segmentation = '02 New Users' 
            when '{{segments}}' = 'Existing Users' then segmentation = '03 Existing Users' 
            when '{{segments}}' = 'All Users Without Existing Segmentation' then segmentation in ('01 All Users','02 New Users','03 Existing Users' )
            else true end
        and  d.application = 'facetune2'
        and lower(d.experiment) like lower('[FT2-1051] Monthly Only TC vs new baseline - new users')
        and display_type in ('{{display_type}}')

),

subs as (
    select distinct 
        segmentation,
        variant,
        u.id_for_vendor,
        purchase_date,
        s.subscription.product_id,
        lt_subscription_id
    from users u
    join `ltx-dwh-prod-processed.ulei.ulei_att_user_groups_and_devices` d
        on d.application = 'facetune2'
        and d.lt_defacto_id = u.lt_defacto_id
        and u.experiment_started_meta >= d.attribution_timestamp
    join `ltx-dwh-prod-processed`.`subscriptions`.`unified_transactions_revenue_allocation` s
        on s.application = 'facetune2'
        and d.attribution_user_id = s.attribution.attribution_user_id
        and s.subscription.subscription_duration not in ('consumable', '6m','1w', 'l')
        and purchase_date > experiment_started_meta
)

select
    timestamp_trunc(purchase_date, day) purchase_date,
    product_id,
    count(distinct lt_subscription_id) num_subscriptions
from subs 
where variant = '{{variant}}'
group by 1,2
order by 1

