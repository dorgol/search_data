/*
    Name: 20230316 - FT2 iOS - [FT-1078] Voluntary AR Off churn prevention - Total Current Subscribers
    Query ID: 41835
    Created By: Josh Seidman
    Last Updated At: 2023-05-14T07:56:46.862Z
    */
    with
users as
(
    select distinct
        segmentation,
        variant,
        id_for_vendor,
        experiment_started_meta,
        lt_defacto_id,
        min(experiment_started_meta_by_type) over (partition by id_for_vendor, segmentation, variant) first_display,
        count(distinct id_for_vendor) over (partition by segmentation, variant) total_users 
    from ( 
        select
            segmentation,
            variant,
            display_type,
            id_for_vendor,
            experiment_started_meta,
            experiment_started_meta_by_type,
            lt_defacto_id
        from `ltx-dwh-prod-processed`.`ab_test`.`raw_final_devices_and_variant` d
        where case 
            when '{{segments}}' = 'All Users' then segmentation = '01 All Users' 
            when '{{segments}}' = 'New Users' then segmentation = '02 New Users' 
            when '{{segments}}' = 'Existing Users' then segmentation = '03 Existing Users' 
            when '{{segments}}' = 'All Users Without Existing Segmentation' then segmentation in ('01 All Users','02 New Users','03 Existing Users' )
            else true end
        and  d.application = 'facetune2'
        and lower(d.experiment) like lower('[FT-1078] Voluntary AR Off churn prevention')
        and display_type in ({{display_type}})
    )
),

current_subs as (
    select distinct
        u.id_for_vendor
    from users u
    join `ltx-dwh-prod-processed.ulei.ulei_att_user_groups_and_devices` d
        on d.application = 'facetune2'
        and d.lt_defacto_id = u.lt_defacto_id
        and u.experiment_started_meta >= d.attribution_timestamp
    join `ltx-dwh-prod-processed`.`subscriptions`.`unified_transactions_revenue_allocation` s
        on s.application = 'facetune2'
        and d.attribution_user_id = s.attribution.attribution_user_id
        and s.subscription.subscription_duration not in ('consumable', '6m','1w', 'l')
        and date(transaction.expiration_date) > current_date()
    where true
)

select
    segmentation,
    variant,
    count(distinct u.id_for_vendor) num_users,
    count(distinct s.id_for_vendor) num_current_subs,
    count(distinct s.id_for_vendor)/count(distinct u.id_for_vendor)*100 pct_current_subs
from users u
left join current_subs s
    on true
    and s.id_for_vendor = u.id_for_vendor
group by 1,2
order by 1,2