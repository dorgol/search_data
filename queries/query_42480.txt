/*
    Name: VL iOS - Landing Screen Experiment - Convergence v2
    Query ID: 42480
    Created By: Joseph Rouncefield
    Last Updated At: 2023-06-05T13:05:31.355Z
    */
    with devices as (
    select
        timestamp_diff(experiment_started_meta, first_day, day) as days_to_assignment,
        lt_defacto_id,
        experiment,
        experiment_started_device,
        experiment_started_meta,
        first_day,
        variant,
        segmentation,
        display_type
        --count(distinct lt_defacto_id) as num_devices,
    from `ltx-dwh-prod-processed.ab_test.raw_final_devices_and_variant` d
    where lower(d.experiment) like lower('vl_landing_screen_experiment_05_2023_local')
    and display_type like '{{display}}%'
        and case 
                when '{{segments}}' = 'All Users' then segmentation = '01 All Users' 
                when '{{segments}}' = 'New Users' then segmentation = '02 New Users' 
                when '{{segments}}' = 'Existing Users' then segmentation = '03 Existing Users' 
                when '{{segments}}' = 'No Segmentation' then segmentation = '01 All Users'
                else true end
        and case 
                when '{{countries}}' = 'Global' then true 
                when '{{countries}}' = 'Rest of the World' then country not in ('US','CN')
                when '{{countries}}' = 'All' then true
                else country = '{{countries}}' end
),
   
device_sub as (
select distinct
    std.lt_defacto_id,
    `lt_subscription_id`
from devices d
join ltx-dwh-prod-processed.subscriptions.subscription_to_defacto std
    on d.lt_defacto_id = std.lt_defacto_id
    and original_purchase_date >= experiment_started_meta
),

subsday0 as (
    select distinct
        d.days_to_assignment,
        s.lt_subscription_id,
        d.lt_defacto_id,
        d.variant,
        s.payments.revenue_so_far_alloc_cs as revenue_so_far,
        s.subscription.had_trial,
        s.subscription.subscription_duration,
        s.original_purchase_date,
        case when subscription.is_sol is true then true else false end as is_sol
    from devices d 
    left join device_sub ds
        on ds.lt_defacto_id = d.lt_defacto_id
    left join `ltx-dwh-prod-processed`.`subscriptions`.`unified_subscriptions_revenue_allocation_cross_sell` s
        on ds.lt_subscription_id = s.lt_subscription_id
        and s.application = 'videoleap' and s.platform = 'ios'
    --left join `ltx-dwh-prod-processed`.`agg`.`unified_subscriptions_source` ss
    --    on ss.lt_subscription_id = s.lt_subscription_id
    where  days_to_assignment >= {{start_day}} 
    and (select max(days_to_assignment) from devices)-days_to_assignment >= {{days to remove}}
),


array_days as (
select day_of_experiment
    from(select generate_array(0,50) as days_array),unnest(days_array) as day_of_experiment
)

select
    day_of_experiment,
    variant,
    count(distinct lt_defacto_id) as num_devices,
    count(distinct lt_subscription_id) as num_sub,
    count(distinct case when revenue_so_far > 0 then lt_subscription_id end) as num_eventually_paid_sub,
    count(distinct lt_subscription_id) / count(distinct lt_defacto_id) *100 as cum_cvr,
    count(distinct case when is_sol is true then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_sol_cvr,
    count(distinct case when is_sol is false then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_non_sol_cvr,
    count(distinct case when revenue_so_far > 0 then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_paid_cvr,
    count(distinct case when revenue_so_far > 0 and is_sol is true then lt_subscription_id end) / count(distinct lt_defacto_id) *100 as cum_paid_sol_cvr,
    case when count(distinct case when subscription_duration = '1y' and had_trial then lt_subscription_id end) > 0 then count(distinct case when subscription_duration = '1y' and had_trial and revenue_so_far > 0 then lt_subscription_id end) / count(distinct case when subscription_duration = '1y' and had_trial then lt_subscription_id end) *100 else 0 end as cum_trial_to_paid_ratio
from subsday0
cross join array_days
where days_to_assignment <= day_of_experiment
and day_of_experiment >= {{start_day}} and day_of_experiment < (select max(days_to_assignment) from devices) - {{days to remove}}
group by 1,2
order by 1,2